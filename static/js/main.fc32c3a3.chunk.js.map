{"version":3,"sources":["components/atoms/DropdownItem.js","components/molecules/Dropdown.js","components/organisms/Header.js","components/molecules/IssueRow.js","components/atoms/Button.js","components/organisms/TabContainer.js","components/organisms/ModalContainer.js","components/organisms/NewIssue.js","components/organisms/EditIssue.js","components/templates/Issue.js","pages/Home.js","pages/Profile.js","pages/IssuePage.js","pages/PullRequest.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["DropdownItem","props","className","exact","to","title","defaultProps","Dropdown","useState","isOpen","setIsOpen","onClick","Header","IssueRow","details","dispatch","useDispatch","id","type","payload","issueId","status","createdBy","Button","handleClick","children","TabContainer","openTab","setOpenTab","searchQuery","setSearchQuery","data","useSelector","state","issueReducer","issueList","useMemo","values","Object","length","filter","value","includes","tabDefaultStyle","tabActiveStyle","tabInactiveStyle","tabPanelActiveStyle","tabPanelInactiveStyle","classNames","placeholder","onChange","e","target","keys","map","key","colSpan","Modal","setAppElement","customStyles","content","inset","ModalContainer","component","style","NewIssue","setTitle","description","setDescription","closeModal","htmlFor","name","addIssue","EditIssue","modalReducer","issue","setStatus","updateIssue","Issue","isModalOpen","newIssue","Home","PullRequest","IssuePage","App","path","Profile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialData","1","2","3","issueInitialState","index","modalInitialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAIMA,EAAe,SAACC,GACpB,OACE,6BACE,cAAC,IAAD,CACEC,UAAU,sDACVC,MAAOF,EAAME,MACbC,GAAIH,EAAMG,GAHZ,SAKGH,EAAMI,WAYfL,EAAaM,aAAe,CAC1BH,OAAO,GAGMH,QCIAO,EA5BE,WACf,IADqB,EAIOC,oBAAS,GAJhB,mBAIdC,EAJc,KAINC,EAJM,KAKrB,OACE,sBAAKR,UAAU,WAAf,UACE,wBAAQS,QANQ,WAClBD,GAAWD,IAKT,SACGA,EACC,cAAC,IAAD,CAAOP,UAAU,uBAEjB,cAAC,IAAD,CAAUA,UAAU,yBAGvBO,GACC,qBAAKP,UAAU,8DAAf,SACE,qBAAIA,UAAU,YAAd,UACE,cAAC,EAAD,CAAcC,MAAM,OAAOC,GAAG,IAAIC,MAAM,SACxC,cAAC,EAAD,CAAcD,GAAG,WAAWC,MAAM,YAClC,cAAC,EAAD,CAAcD,GAAG,SAASC,MAAM,UAChC,cAAC,EAAD,CAAcD,GAAG,gBAAgBC,MAAM,0BCCpCO,EArBA,WACb,OACE,yBAAQV,UAAU,0DAAlB,UACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,qCAAqCE,GAAG,IAAxD,2BAGA,sBAAKF,UAAU,YAAf,UACE,cAAC,IAAD,CAAMA,UAAU,aAAaE,GAAG,SAAhC,mBAGA,cAAC,IAAD,CAAMF,UAAU,aAAaE,GAAG,gBAAhC,gCAKJ,cAAC,EAAD,Q,OCiBSS,EAjCE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACZC,EAAWC,cAQjB,OACE,qBAAIC,GAAIH,EAAQG,GAAIf,UAAU,QAAQS,QARtB,WAChBI,EAAS,CACPG,KAAM,4BACNC,QAAS,CAAEC,QAASN,EAAQG,OAK9B,UACE,oBAAIf,UAAU,wFAAd,SACE,uBAAOA,UAAU,aAAagB,KAAK,eAErC,oBAAIhB,UAAU,wFAAd,SACGY,EAAQT,QAEX,oBAAIH,UAAU,wFAAd,SACGY,EAAQO,OAAS,OAAS,UAE7B,oBAAInB,UAAU,wFAAd,SACGY,EAAQQ,YAEX,oBAAIpB,UAAU,0FACd,oBAAIA,UAAU,8FCPLqB,EAlBA,SAACtB,GACd,IAAMuB,EAAcvB,EAAMU,QAC1B,OACE,wBACEA,QAASa,EACTtB,UAAS,qGAAgGD,EAAMC,WAFjH,SAIGD,EAAMwB,YCJPC,EAAe,SAACzB,GACpB,IAAMc,EAAWC,cADa,EAEAR,mBAAS,GAFT,mBAEvBmB,EAFuB,KAEdC,EAFc,OAIQpB,mBAAS,IAJjB,mBAIvBqB,EAJuB,KAIVC,EAJU,KAMxBC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaH,QAEjDI,EAAYC,mBAAQ,WACxB,IAAMC,EAASC,OAAOD,OAAON,GAC7B,OAA2B,IAAvBF,EAAYU,OACPF,EAEFA,EAAOG,QAAO,SAACC,GAAD,OAAWA,EAAMpC,MAAMqC,SAASb,QACpD,CAACE,EAAMF,IAEJc,EAAkB,uCAClBC,EAAc,UAAMD,EAAN,8DACdE,EAAgB,UAAMF,EAAN,iEAGhBG,EAAmB,UADI,OAEvBC,EAAqB,UAFE,MAEF,WAE3B,OACE,qBAAK7C,UAAWD,EAAM+C,WAAtB,SACE,sBAAK9C,UAAU,yBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,wBACES,QAAS,kBAAMiB,EAAW,IAC1B1B,UAAuB,IAAZyB,EAAgBiB,EAAiBC,EAF9C,mBAMA,wBACElC,QAAS,kBAAMiB,EAAW,IAC1B1B,UAAuB,IAAZyB,EAAgBiB,EAAiBC,EAF9C,6BAOF,sBAAK3C,UAAU,aAAf,UACE,sBACEA,UACc,IAAZyB,EAAgBmB,EAAsBC,EAF1C,UAKE,sBAAK7C,UAAU,8BAAf,UACE,mBAAGA,UAAU,qBAAb,mBACA,uBACEgB,KAAK,OACLuB,MAAOZ,EACP3B,UAAU,oBACV+C,YAAY,gCACZC,SAAU,SAACC,GAAD,OAAOrB,EAAeqB,EAAEC,OAAOX,UAE3C,cAAC,EAAD,CACE9B,QAAS,kBACPI,EAAS,CACPG,KAAM,0BAGVhB,UAAU,6CANZ,iBAUA,cAAC,EAAD,CAAQA,UAAU,yCAAlB,uBAIF,wBAAOA,UAAU,oBAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,yCAAd,SACE,uBAAOA,UAAU,aAAagB,KAAK,eAErC,oBAAIhB,UAAU,2CACd,oBAAIA,UAAU,yCAAd,4CAGA,oBAAIA,UAAU,yCAAd,gCAGA,oBAAIA,UAAU,yCAAd,sCAGA,oBAAIA,UAAU,yCAAd,2CAKJ,gCACwB,IAArBiC,EAAUI,OACTD,OAAOe,KAAKlB,GAAWmB,KAAI,SAACC,GAC1B,OAAO,cAAC,EAAD,CAAoBzC,QAASqB,EAAUoB,IAAxBA,MAGxB,6BACE,oBAAIC,QAAQ,IAAItD,UAAU,kBAA1B,8EAQV,qBACEA,UACc,IAAZyB,EAAgBmB,EAAsBC,EAF1C,SAKE,mBAAG7C,UAAU,uBAAb,qCAYZwB,EAAapB,aAAe,CAC1B0C,WAAY,IAGCtB,Q,iBC/Hf+B,IAAMC,cAAc,SAEpB,IAAMC,EAAe,CACnBC,QAAS,CACPC,MAAO,UA4BIC,EAxBQ,SAAC,GAA2B,IAAzBrD,EAAwB,EAAxBA,OAAQsD,EAAgB,EAAhBA,UAC1BhD,EAAWC,cAIjB,OACE,mCACE,eAAC,IAAD,CAAOP,OAAQA,EAAQuD,MAAOL,EAA9B,UACE,qBAAKzD,UAAU,aAAf,SACE,wBAAQS,QAPG,WACjBI,EAAS,CAAEG,KAAM,iBAMX,SACE,cAAC,IAAD,CAAOhB,UAAU,8BAGpB6D,QC4CME,EAnEE,WAAO,IAAD,EACKzD,mBAAS,IADd,mBACdH,EADc,KACP6D,EADO,OAEiB1D,mBAAS,IAF1B,mBAEd2D,EAFc,KAEDC,EAFC,KAIfrD,EAAWC,cACXqD,EAAa,WACjBtD,EAAS,CAAEG,KAAM,iBAanB,OACE,sBAAKhB,UAAU,mBAAf,UACE,oBAAIA,UAAU,gBAAd,qCACA,sBAAKA,UAAU,YAAf,UACE,gCACE,uBAAOA,UAAU,aAAaoE,QAAQ,QAAtC,sCAGA,uBACEpD,KAAK,OACLqD,KAAK,QACLrE,UAAU,oBACVe,GAAG,QACHwB,MAAOpC,EACP6C,SAAU,SAACC,GAAD,OAAOe,EAASf,EAAEC,OAAOX,aAGvC,gCACE,uBAAOvC,UAAU,aAAaoE,QAAQ,cAAtC,0BAGA,0BACEC,KAAK,cACLrE,UAAU,oBACVe,GAAG,cACHwB,MAAO0B,EACPjB,SAAU,SAACC,GAAD,OAAOiB,EAAejB,EAAEC,OAAOX,aAG7C,sBAAKvC,UAAU,2BAAf,UACE,cAAC,EAAD,CACES,QAAS,kBA1CF,SAACN,EAAO8D,GACvBpD,EAAS,CACPG,KAAM,YACNC,QAAS,CACPd,MAAOA,EACP8D,YAAaA,KAGjBE,IAkCuBG,CAASnE,EAAO8D,IAC/BjE,UAAU,6CAFZ,0BAMA,cAAC,EAAD,CACES,QAAS,kBAAM0D,KACfnE,UAAU,kCAFZ,0CCuCKuE,EA7FG,WAChB,IAAM1D,EAAWC,cACXqD,EAAa,WACjBtD,EAAS,CAAEG,KAAM,iBAabE,EAAUY,aAAY,SAACC,GAAD,OAAWA,EAAMyC,aAAatD,WAEpDuD,EADY3C,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaH,QACpCX,GAlBF,EAmBIZ,mBAASmE,EAAMtE,OAnBnB,mBAmBfA,EAnBe,KAmBR6D,EAnBQ,OAoBgB1D,mBAASmE,EAAMR,aApB/B,mBAoBfA,EApBe,KAoBFC,EApBE,OAqBM5D,mBAASmE,EAAMtD,QArBrB,mBAqBfA,EArBe,KAqBPuD,EArBO,KAuBtB,OACE,sBAAK1E,UAAU,mBAAf,UACE,oBAAIA,UAAU,gBAAd,qCACA,sBAAKA,UAAU,YAAf,UACE,gCACE,uBAAOA,UAAU,aAAaoE,QAAQ,QAAtC,sCAGA,uBACEpD,KAAK,OACLqD,KAAK,QACLrE,UAAU,oBACVe,GAAG,QACHwB,MAAOpC,EACP6C,SAAU,SAACC,GAAD,OAAOe,EAASf,EAAEC,OAAOX,aAGvC,gCACE,uBAAOvC,UAAU,aAAaoE,QAAQ,cAAtC,0BAGA,0BACEC,KAAK,cACLrE,UAAU,oBACVe,GAAG,cACHwB,MAAO0B,EACPjB,SAAU,SAACC,GAAD,OAAOiB,EAAejB,EAAEC,OAAOX,aAG7C,gCACE,uBAAOvC,UAAU,aAAaoE,QAAQ,SAAtC,4CAGA,yBACEpE,UAAU,aACVqE,KAAK,SACLtD,GAAG,SACHwB,MAAOpB,EACP6B,SAAU,SAACC,GAAD,OAAOyB,EAAUzB,EAAEC,OAAOX,QALtC,UAOE,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,yBAGJ,sBAAKvC,UAAU,2BAAf,UACE,cAAC,EAAD,CACES,QAAS,YAhEC,SAACM,EAAIZ,EAAO8D,EAAa9C,GAC3CN,EAAS,CACPG,KAAM,eACNC,QAAS,CACPF,GAAIA,EACJZ,MAAOA,EACP8D,YAAaA,EACb9C,OAAQA,KA0DFwD,CAAYzD,EAASf,EAAO8D,EAAa9C,GACzCgD,KAEFnE,UAAU,6CALZ,0BASA,cAAC,EAAD,CACES,QAAS0D,EACTnE,UAAU,kCAFZ,0CCvDK4E,EAnBD,WACZ,IAAMC,EAAc/C,aAAY,SAACC,GAAD,OAAWA,EAAMyC,aAAaK,eACxD3D,EAAUY,aAAY,SAACC,GAAD,OAAWA,EAAMyC,aAAatD,WAGpD2C,EAFW/B,aAAY,SAACC,GAAD,OAAWA,EAAMyC,aAAaM,YAE9B,cAAC,EAAD,IAAe,cAAC,EAAD,IAC5C,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAchC,WAAW,UACzB,cAAC,EAAD,CACEvC,OAAQsE,EACRhB,UAAWA,EACX3C,QAASA,QCVF6D,EARF,WACX,OACE,8BACE,cAAC,EAAD,OCKSC,EARK,WAClB,OACE,8BACE,cAAC,EAAD,OCKSC,EARG,WAChB,OACE,8BACE,cAAC,EAAD,OCKSD,EARK,WAClB,OACE,8BACE,cAAC,EAAD,O,OCYSE,MAXf,WACE,OACE,sBAAKlF,UAAU,MAAf,UACE,cAAC,IAAD,CAAOC,OAAK,EAACkF,KAAK,IAAItB,UAAWkB,IACjC,cAAC,IAAD,CAAOI,KAAK,WAAWtB,UAAWuB,IAClC,cAAC,IAAD,CAAOD,KAAK,SAAStB,UAAWe,IAChC,cAAC,IAAD,CAAOO,KAAK,gBAAgBtB,UAAWmB,QCD9BK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCLRQ,EAAc,CAClBC,EAAG,CACDhF,GAAI,EACJZ,MAAO,oBACPgB,OAAQ,EACR8C,YAAa,2DACb7C,UAAW,IAEb4E,EAAG,CACDjF,GAAI,EACJZ,MAAO,uCACP8D,YAAa,2DACb9C,OAAQ,EACRC,UAAW,IAEb6E,EAAG,CACDlF,GAAI,EACJZ,MAAO,aACP8D,YAAa,2DACb9C,OAAQ,EACRC,UAAW,KAIT8E,EAAoB,CACxBC,MAAO/D,OAAOe,KAAK2C,GAAazD,OAChCR,KAAMiE,GAGFM,EAAoB,CACxBvB,aAAa,EACbC,UAAU,EACV5D,QAAS,MA0DLmF,EAAcC,YAAgB,CAClCtE,aAxDmB,WAAwC,IAAD,EAAtCD,EAAsC,uDAA9BmE,EAAmBK,EAAW,uCAClDJ,EAAUpE,EAAVoE,MACFpF,EAAKoF,EAAQ,EACnB,OAAQI,EAAOvF,MACb,IAAK,eACH,MAAO,CACLmF,MAAOA,EACPtE,KAAK,2BACAE,EAAMF,MADP,kBAED0E,EAAOtF,QAAQF,GAAK,CACnBZ,MAAOoG,EAAOtF,QAAQd,MACtB8D,YAAasC,EAAOtF,QAAQgD,YAC5B9C,OAAQoF,EAAOtF,QAAQE,WAI/B,IAAK,YACH,OAAO,2BACFY,GADL,IAEEoE,MAAOpF,EACPc,MAAI,mBACDd,EAAKA,GADJ,sBAEKwF,EAAOtF,QAAQd,OAFpB,4BAGWoG,EAAOtF,QAAQgD,aAH1B,uBAIM,GAJN,0BAKS,IALT,KASV,OAAOlC,GA4BPyC,aAzBmB,WAAwC,IAAvCzC,EAAsC,uDAA9BqE,EAAmBG,EAAW,uCAC1D,OAAQA,EAAOvF,MACb,IAAK,uBACH,MAAO,CACL6D,aAAa,EACbC,UAAU,GAEd,IAAK,4BACH,MAAO,CACLD,aAAa,EACbC,UAAU,EACV5D,QAASqF,EAAOtF,QAAQC,SAE5B,IAAK,cACH,MAAO,CACL2D,aAAa,EACbC,UAAU,GAEd,QACE,OAAO/C,MAWEyE,EAFDC,YAAYJ,GCxF1BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINK,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.fc32c3a3.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nconst DropdownItem = (props) => {\n  return (\n    <li>\n      <Link\n        className=\"block px-6 py-4 transition-colors hover:bg-gray-200\"\n        exact={props.exact}\n        to={props.to}\n      >\n        {props.title}\n      </Link>\n    </li>\n  );\n};\n\nDropdownItem.propTypes = {\n  exact: PropTypes.string,\n  to: PropTypes.string,\n  title: PropTypes.string,\n};\n\nDropdownItem.defaultProps = {\n  exact: false,\n};\n\nexport default DropdownItem;\n","import React, { useState } from \"react\";\nimport { MenuIcon, XIcon } from \"@heroicons/react/solid\";\nimport DropdownItem from \"../atoms/DropdownItem\";\n\nconst Dropdown = () => {\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  };\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <div className=\"relative\">\n      <button onClick={handleClick}>\n        {isOpen ? (\n          <XIcon className=\"w-8 h-8 text-white\" />\n        ) : (\n          <MenuIcon className=\"w-8 h-8 text-white\" />\n        )}\n      </button>\n      {isOpen && (\n        <div className=\"absolute right-0 overflow-hidden bg-white rounded-lg shadow\">\n          <ul className=\"min-w-max\">\n            <DropdownItem exact=\"true\" to=\"/\" title=\"Home\" />\n            <DropdownItem to=\"/profile\" title=\"Profile\" />\n            <DropdownItem to=\"/issue\" title=\"Issue\" />\n            <DropdownItem to=\"/pull-request\" title=\"Pull Request\" />\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Dropdown from \"../molecules/Dropdown\";\n\nconst Header = () => {\n  return (\n    <header className=\"flex items-center justify-between px-6 py-4 bg-gray-700\">\n      <div className=\"flex items-center\">\n        <Link className=\"mr-8 text-4xl font-bold text-white\" to=\"/\">\n          GitHub Viewer\n        </Link>\n        <div className=\"space-x-4\">\n          <Link className=\"text-white\" to=\"/issue\">\n            Issue\n          </Link>\n          <Link className=\"text-white\" to=\"/pull-request\">\n            Pull Request\n          </Link>\n        </div>\n      </div>\n      <Dropdown />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\n\nconst IssueRow = ({ details }) => {\n  const dispatch = useDispatch();\n  const openModal = () => {\n    dispatch({\n      type: \"OPEN_MODAL_EXISTING_ISSUE\",\n      payload: { issueId: details.id },\n    });\n  };\n\n  return (\n    <tr id={details.id} className=\"group\" onClick={openModal}>\n      <td className=\"p-3 transition-colors border-b border-gray-200 cursor-pointer group-hover:bg-gray-200\">\n        <input className=\"rounded-sm\" type=\"checkbox\" />\n      </td>\n      <td className=\"p-3 transition-colors border-b border-gray-200 cursor-pointer group-hover:bg-gray-200\">\n        {details.title}\n      </td>\n      <td className=\"p-3 transition-colors border-b border-gray-200 cursor-pointer group-hover:bg-gray-200\">\n        {details.status ? \"Open\" : \"Close\"}\n      </td>\n      <td className=\"p-3 transition-colors border-b border-gray-200 cursor-pointer group-hover:bg-gray-200\">\n        {details.createdBy}\n      </td>\n      <td className=\"p-3 transition-colors border-b border-gray-200 cursor-pointer group-hover:bg-gray-200\"></td>\n      <td className=\"p-3 transition-colors border-b border-gray-200 cursor-pointer group-hover:bg-gray-200\"></td>\n    </tr>\n  );\n};\n\nIssueRow.propTypes = {\n  details: PropTypes.object,\n};\n\nexport default IssueRow;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Button = (props) => {\n  const handleClick = props.onClick;\n  return (\n    <button\n      onClick={handleClick}\n      className={`inline-flex justify-center items-center px-6 py-2 text-center transition-colors rounded-md ${props.className}`}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport React, { useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport IssueRow from \"../molecules/IssueRow\";\nimport Button from \"../atoms/Button\";\n\nconst TabContainer = (props) => {\n  const dispatch = useDispatch();\n  const [openTab, setOpenTab] = useState(0);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const data = useSelector((state) => state.issueReducer.data);\n\n  const issueList = useMemo(() => {\n    const values = Object.values(data);\n    if (searchQuery.length === 0) {\n      return values;\n    }\n    return values.filter((value) => value.title.includes(searchQuery));\n  }, [data, searchQuery]);\n\n  const tabDefaultStyle = \"p-6 text-center text-lg rounded-t-lg\";\n  const tabActiveStyle = `${tabDefaultStyle} border-t border-l border-r border-gray-300 cursor-default`;\n  const tabInactiveStyle = `${tabDefaultStyle} border-b border-gray-300 transition-colors hover:bg-gray-100`;\n\n  const tabPanelDefaultStyle = \"p-6\";\n  const tabPanelActiveStyle = `${tabPanelDefaultStyle}`;\n  const tabPanelInactiveStyle = `${tabPanelDefaultStyle} hidden`;\n\n  return (\n    <div className={props.classNames}>\n      <div className=\"max-w-4xl px-6 mx-auto\">\n        <div className=\"grid grid-cols-2 tabs\">\n          <button\n            onClick={() => setOpenTab(0)}\n            className={openTab === 0 ? tabActiveStyle : tabInactiveStyle}\n          >\n            Issue\n          </button>\n          <button\n            onClick={() => setOpenTab(1)}\n            className={openTab === 1 ? tabActiveStyle : tabInactiveStyle}\n          >\n            Pull Request\n          </button>\n        </div>\n        <div className=\"tab-panels\">\n          <div\n            className={\n              openTab === 0 ? tabPanelActiveStyle : tabPanelInactiveStyle\n            }\n          >\n            <div className=\"flex items-center space-x-4\">\n              <p className=\"text-2xl font-bold\">Issue</p>\n              <input\n                type=\"text\"\n                value={searchQuery}\n                className=\"w-full rounded-md\"\n                placeholder=\"Issue名で検索\"\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n              <Button\n                onClick={() =>\n                  dispatch({\n                    type: \"OPEN_MODAL_NEW_ISSUE\",\n                  })\n                }\n                className=\"text-white bg-green-600 hover:bg-green-700\"\n              >\n                New\n              </Button>\n              <Button className=\"text-white bg-red-600 hover:bg-red-700\">\n                Delete\n              </Button>\n            </div>\n            <table className=\"w-full table-auto\">\n              <thead>\n                <tr>\n                  <th className=\"p-3 text-left border-b border-gray-300\">\n                    <input className=\"rounded-sm\" type=\"checkbox\" />\n                  </th>\n                  <th className=\"p-3 text-left border-b border-gray-300\"></th>\n                  <th className=\"p-3 text-left border-b border-gray-300\">\n                    ステータス\n                  </th>\n                  <th className=\"p-3 text-left border-b border-gray-300\">\n                    作成者\n                  </th>\n                  <th className=\"p-3 text-left border-b border-gray-300\">\n                    作成日付\n                  </th>\n                  <th className=\"p-3 text-left border-b border-gray-300\">\n                    更新日付\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {issueList.length !== 0 ? (\n                  Object.keys(issueList).map((key) => {\n                    return <IssueRow key={key} details={issueList[key]} />;\n                  })\n                ) : (\n                  <tr>\n                    <td colSpan=\"6\" className=\"p-3 text-center\">\n                      データがありません\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n          <div\n            className={\n              openTab === 1 ? tabPanelActiveStyle : tabPanelInactiveStyle\n            }\n          >\n            <p className=\"text-3xl text-center\">Pull Request</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTabContainer.propTypes = {\n  classNames: PropTypes.string,\n};\n\nTabContainer.defaultProps = {\n  classNames: \"\",\n};\n\nexport default TabContainer;\n","import React from \"react\";\nimport { XIcon } from \"@heroicons/react/solid\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\n\nModal.setAppElement(\"#root\");\n\nconst customStyles = {\n  content: {\n    inset: \"100px\",\n  },\n};\n\nconst ModalContainer = ({ isOpen, component }) => {\n  const dispatch = useDispatch();\n  const closeModal = () => {\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n  return (\n    <>\n      <Modal isOpen={isOpen} style={customStyles}>\n        <div className=\"text-right\">\n          <button onClick={closeModal}>\n            <XIcon className=\"w-8 h-8 text-gray-500\" />\n          </button>\n        </div>\n        {component}\n      </Modal>\n    </>\n  );\n};\n\nModalContainer.propTypes = {\n  isOpen: PropTypes.bool,\n  component: PropTypes.element,\n};\n\nexport default ModalContainer;\n","import React, { useState } from \"react\";\nimport Button from \"../atoms/Button\";\nimport { useDispatch } from \"react-redux\";\n\nconst NewIssue = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const closeModal = () => {\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n  const addIssue = (title, description) => {\n    dispatch({\n      type: \"ADD_ISSUE\",\n      payload: {\n        title: title,\n        description: description,\n      },\n    });\n    closeModal();\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto\">\n      <h2 className=\"mb-8 text-3xl\">Issueを追加</h2>\n      <div className=\"space-y-8\">\n        <div>\n          <label className=\"block mb-2\" htmlFor=\"title\">\n            タイトル\n          </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"w-full rounded-md\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"block mb-2\" htmlFor=\"description\">\n            説明\n          </label>\n          <textarea\n            name=\"description\"\n            className=\"w-full rounded-md\"\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </div>\n        <div className=\"grid grid-cols-2 gap-x-6\">\n          <Button\n            onClick={() => addIssue(title, description)}\n            className=\"text-white bg-green-600 hover:bg-green-700\"\n          >\n            追加\n          </Button>\n          <Button\n            onClick={() => closeModal(title, description)}\n            className=\"text-gray-500 hover:bg-gray-100\"\n          >\n            閉じる\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewIssue;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../atoms/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst EditIssue = () => {\n  const dispatch = useDispatch();\n  const closeModal = () => {\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n  const updateIssue = (id, title, description, status) => {\n    dispatch({\n      type: \"UPDATE_ISSUE\",\n      payload: {\n        id: id,\n        title: title,\n        description: description,\n        status: status,\n      },\n    });\n  };\n  const issueId = useSelector((state) => state.modalReducer.issueId);\n  const issueData = useSelector((state) => state.issueReducer.data);\n  const issue = issueData[issueId];\n  const [title, setTitle] = useState(issue.title);\n  const [description, setDescription] = useState(issue.description);\n  const [status, setStatus] = useState(issue.status);\n\n  return (\n    <div className=\"max-w-md mx-auto\">\n      <h2 className=\"mb-8 text-3xl\">Issueを編集</h2>\n      <div className=\"space-y-8\">\n        <div>\n          <label className=\"block mb-2\" htmlFor=\"title\">\n            タイトル\n          </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"w-full rounded-md\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"block mb-2\" htmlFor=\"description\">\n            説明\n          </label>\n          <textarea\n            name=\"description\"\n            className=\"w-full rounded-md\"\n            id=\"description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </div>\n        <div>\n          <label className=\"block mb-2\" htmlFor=\"status\">\n            ステータス\n          </label>\n          <select\n            className=\"rounded-md\"\n            name=\"status\"\n            id=\"status\"\n            value={status}\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <option value=\"1\">Open</option>\n            <option value=\"0\">Close</option>\n          </select>\n        </div>\n        <div className=\"grid grid-cols-2 gap-x-6\">\n          <Button\n            onClick={() => {\n              updateIssue(issueId, title, description, status);\n              closeModal();\n            }}\n            className=\"text-white bg-green-600 hover:bg-green-700\"\n          >\n            更新\n          </Button>\n          <Button\n            onClick={closeModal}\n            className=\"text-gray-500 hover:bg-gray-100\"\n          >\n            閉じる\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEditIssue.propTypes = {\n  issueId: PropTypes.number,\n};\n\nexport default EditIssue;\n","import React from 'react'\nimport Header from '../organisms/Header';\nimport TabContainer from \"../organisms/TabContainer\";\nimport ModalContainer from \"../organisms/ModalContainer\";\nimport { useSelector } from \"react-redux\";\nimport NewIssue from '../organisms/NewIssue';\nimport EditIssue from '../organisms/EditIssue';\n\nconst Issue = () => {\n  const isModalOpen = useSelector((state) => state.modalReducer.isModalOpen);\n  const issueId = useSelector((state) => state.modalReducer.issueId);\n  const newIssue = useSelector((state) => state.modalReducer.newIssue);\n\n  const component = newIssue ? <NewIssue /> : <EditIssue />;\n  return (\n    <div>\n      <Header />\n      <TabContainer classNames=\"pt-10\" />\n      <ModalContainer\n        isOpen={isModalOpen}\n        component={component}\n        issueId={issueId}\n      />\n    </div>\n  );\n}\n\nexport default Issue\n","import React from 'react'\nimport Default from '../components/templates/Issue';\n\nconst Home = () => {\n  return (\n    <div>\n      <Default />\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport Default from \"../components/templates/Issue\";\n\nconst PullRequest = () => {\n  return (\n    <div>\n      <Default />\n    </div>\n  );\n}\n\nexport default PullRequest\n","import React from 'react'\nimport Issue from \"../components/templates/Issue\";\n\nconst IssuePage = () => {\n  return (\n    <div>\n      <Issue />\n    </div>\n  );\n}\n\nexport default IssuePage;\n","import React from 'react'\nimport Default from \"../components/templates/Issue\";\n\nconst PullRequest = () => {\n  return (\n    <div>\n      <Default />\n    </div>\n  );\n}\n\nexport default PullRequest\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Issue from \"./pages/IssuePage\";\nimport PullRequest from \"./pages/PullRequest\";\nimport { Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/profile\" component={Profile} />\n      <Route path=\"/issue\" component={Issue} />\n      <Route path=\"/pull-request\" component={PullRequest} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from \"redux\";\n\nconst initialData = {\n  1: {\n    id: 1,\n    title: \"A bug in Top Page\",\n    status: 0,\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    createdBy: \"\",\n  },\n  2: {\n    id: 2,\n    title: \"A problem of performance in Top Page\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    status: 0,\n    createdBy: \"\",\n  },\n  3: {\n    id: 3,\n    title: \"fix layout\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    status: 1,\n    createdBy: \"\",\n  },\n};\n\nconst issueInitialState = {\n  index: Object.keys(initialData).length,\n  data: initialData,\n};\n\nconst modalInitialState = {\n  isModalOpen: false,\n  newIssue: false,\n  issueId: null,\n};\n\nconst issueReducer = (state = issueInitialState, action) => {\n  const { index } = state;\n  const id = index + 1;\n  switch (action.type) {\n    case \"UPDATE_ISSUE\":\n      return {\n        index: index,\n        data: {\n          ...state.data,\n          [action.payload.id]: {\n            title: action.payload.title,\n            description: action.payload.description,\n            status: action.payload.status,\n          },\n        },\n      };\n    case \"ADD_ISSUE\":\n      return {\n        ...state,\n        index: id,\n        data: {\n          [id]: id,\n          title: action.payload.title,\n          description: action.payload.description,\n          status: 1,\n          createdBy: \"\",\n        },\n      };\n  }\n  return state;\n};\n\nconst modalReducer = (state = modalInitialState, action) => {\n  switch (action.type) {\n    case \"OPEN_MODAL_NEW_ISSUE\":\n      return {\n        isModalOpen: true,\n        newIssue: true,\n      };\n    case \"OPEN_MODAL_EXISTING_ISSUE\":\n      return {\n        isModalOpen: true,\n        newIssue: false,\n        issueId: action.payload.issueId,\n      };\n    case \"CLOSE_MODAL\":\n      return {\n        isModalOpen: false,\n        newIssue: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  issueReducer,\n  modalReducer,\n});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}